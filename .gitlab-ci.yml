stages:
  - code-Quality
  - test
  - build
  - deploy

include:
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  stage: code-Quality
  artifacts:
    paths: [gl-code-quality-report.json] 
  tags:
    - Group19Runner

test:
  stage: test
  image: maven:latest
  script:
    - cd coder-gate
    - echo "Pipeline test started"
    - mvn verify
  artifacts: 
      paths:
        - coder-gate/target/surefire-reports
      reports:
        junit:
          - coder-gate/target/surefire-reports/TEST-*.xml
  tags:
    - Group19Runner

build-backend:
  stage: build
  image: maven:latest
  script:
    - cd coder-gate
    - echo "Building the pipeline"
    - mvn clean package
  dependencies:
    - code_quality
    - test
  artifacts:
    paths:
      - coder-gate/target
      - coder-gate-ui/dist
  tags:
    - Group19Runner

deploy-backend:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - chmod og-rwx ${DEPLOY_SSH_KEY}
    - ssh -o StrictHostKeyChecking=no -i "${DEPLOY_SSH_KEY}" ${DEPLOY_USER}@${DEPLOY_HOST} "sudo -S sh -c 'cd ${DOCKER_BACK_END_PATH} && docker build -t coder-gate-backend:latest -f Dockerfile-backend .'" < <(echo ${SUDO_PASSWORD})
    - ssh -o StrictHostKeyChecking=no -i "${DEPLOY_SSH_KEY}" ${DEPLOY_USER}@${DEPLOY_HOST} "docker run -d --name coder-gate-backend -p 8080:8080 coder-gate-backend"
  tags:
    - Group19Runner
  only:
  - dev 

    
